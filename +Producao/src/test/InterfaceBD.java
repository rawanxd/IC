/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import dataCon.DataBase;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Victor
 */
public class InterfaceBD extends javax.swing.JFrame {

  /**
   * Creates new form NewJFrame
   */
  public InterfaceBD() throws SQLException, FileNotFoundException, IOException {
    initComponents();
    tryConnect();
    translate();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAtual = new javax.swing.JButton();
        bCreate = new javax.swing.JButton();
        bPref = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        bCurr = new javax.swing.JLabel();
        localL = new javax.swing.JLabel();
        remoteL = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setTitle("Base de Dados");
        setResizable(false);

        bAtual.setText("Ataulizar");
        bAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtualActionPerformed(evt);
            }
        });

        bCreate.setText("Criar");
        bCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCreateActionPerformed(evt);
            }
        });

        bPref.setText("Setar");
        bPref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrefActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        bCurr.setText("Há Currículos cadastrados");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bCurr)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bCurr))
        );

        localL.setText("Local");

        remoteL.setText("Remoto");
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bAtual)
                            .addComponent(bCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bPref)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remoteL)
                            .addComponent(localL))))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(bPref)
                .addGap(25, 25, 25)
                .addComponent(bAtual)
                .addGap(25, 25, 25)
                .addComponent(bCreate)
                .addGap(25, 25, 25)
                .addComponent(localL)
                .addGap(25, 25, 25)
                .addComponent(remoteL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void bCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateActionPerformed
    Preferencias pref = null;
    try {
      pref = new Preferencias(true);
    } catch (FileNotFoundException ex) {
      Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
    }
        pref.setVisible(true);
  }//GEN-LAST:event_bCreateActionPerformed

  private void bAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtualActionPerformed
      UpdateScreen up = new UpdateScreen();
      up.setVisible(true);
  }//GEN-LAST:event_bAtualActionPerformed

  private void bPrefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrefActionPerformed
    Preferencias pref = null;
    try {
      pref = new Preferencias(false);
    } catch (FileNotFoundException ex) {
      Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
    }
    pref.setVisible(true);
    // TODO add your handling code here:
  }//GEN-LAST:event_bPrefActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(InterfaceBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(InterfaceBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(InterfaceBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(InterfaceBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        try {
          new InterfaceBD().setVisible(true);
        } catch (SQLException ex) {
          Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
          Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
          Logger.getLogger(InterfaceBD.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    });
  }
  
  public void tryConnect(){
    if(DataBase.verifyConn("preferences.txt") )
    {
        Image help = (Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/greenL.png")));
        ImageIcon good = new ImageIcon(help);

        localL.setIcon(good);
    }
    else
    {
        Image help = (Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/redL.png")));
        ImageIcon bad = new ImageIcon(help);

        localL.setIcon(bad);
    }
     
    if(DataBase.verifyConn("remote.txt") )
    {
        Image help = (Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/greenL.png")));
        ImageIcon good = new ImageIcon(help);
        
        remoteL.setIcon(good);
    }
    else
    {
        Image help = (Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/redL.png")));
        ImageIcon bad = new ImageIcon(help);

        remoteL.setIcon(bad);
    }
  }
  
  public void translate() throws FileNotFoundException, IOException, SQLException{
    Locale currentLocale;
    ResourceBundle messages;
        
    ResultSet rs = null;
    String sql ="";              // BD
    BufferedReader br = null;                   // READ
    String sCurrentLine;
    String local = "";
    int i = 0;
    
    br = new BufferedReader(new FileReader("locale.txt"));            //// start copy first part of Index
    while ((sCurrentLine = br.readLine()) != null) {
      local = sCurrentLine;  
    }

    if(local.equals("en_US"))
      currentLocale = new Locale("en","US");
    else
      currentLocale = new Locale("pt","BR");
    
    messages = ResourceBundle.getBundle("locales.MessagesBundle",currentLocale);
    
    int aux = 0;
    
    br = new BufferedReader(new FileReader("prodNumber.txt"));            //// start copy first part of Index
    if(br!= null)
      while ((sCurrentLine = br.readLine()) != null) {
        aux = Integer.parseInt(sCurrentLine);  
      }
    
    bCurr.setText(""+aux+" "+messages.getString("bCurr"));
    
    Preferencias pref = new Preferencias();
  //  bIP.setText(messages.getString("bIP")+" "+pref.getIp());

    bAtual.setText(messages.getString("bAtual"));
    bPref.setText(messages.getString("bPref"));
    bCreate.setText(messages.getString("bCreate"));
    this.setTitle(messages.getString("bTitle"));
  }
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtual;
    private javax.swing.JButton bCreate;
    private javax.swing.JLabel bCurr;
    private javax.swing.JButton bPref;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel localL;
    private javax.swing.JLabel remoteL;
    // End of variables declaration//GEN-END:variables
}
